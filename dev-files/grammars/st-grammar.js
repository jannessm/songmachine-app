// Generated automatically by nearley, version 2.15.1
// http://github.com/Hardmath123/nearley
(function () {
function id(x) { return x[0]; }

const post = function post(css, data, rest, isTerminal = true){
  return [
      {
        css: css,
        content: data,
        isTerminal
      },
      rest
    ]
}

const pP = {
  r: ([fst, d])  => post("red", fst, d),
  g: ([fst, d]) => post("green", fst, d),
  b: ([fst, d]) => post("blue", fst, d),
  i: ([fst, d]) => post("italic", fst, d),
  bo: ([fst, d]) => post("bold", fst, d),
  bo_i: ([fst, d]) => post("bold italic", fst, d),
  r_i: ([fst, d]) => post("red italic", fst, d),
  r_bo: ([fst, d]) => post("red bold", fst, d),
  r_bo_i: ([fst, d]) => post("red bold italic", fst, d),
  g_i: ([fst, d]) => post("green italic", fst, d),
  g_bo: ([fst, d]) => post("green bold", fst, d),
  g_bo_i: ([fst, d]) => post("green bold italic", fst, d),
  b_i: ([fst, d]) => post("blue italic", fst, d),
  b_bo: ([fst, d]) => post("blue bold", fst, d),
  b_bo_i: ([fst, d]) => post("blue bold italic", fst, d),

  r_: ([fst, d])  => post("red", fst, d, false),
  g_: ([fst, d]) => post("green", fst, d, false),
  b_: ([fst, d]) => post("blue", fst, d, false),
  i_: ([fst, d]) => post("italic", fst, d, false),
  bo_: ([fst, d]) => post("bold", fst, d, false),
  bo_i_: ([fst, d]) => post("bold italic", fst, d, false),
  r_i_: ([fst, d]) => post("red italic", fst, d, false),
  r_bo_: ([fst, d]) => post("red bold", fst, d, false),
  r_bo_i_: ([fst, d]) => post("red bold italic", fst, d, false),
  g_i_: ([fst, d]) => post("green italic", fst, d, false),
  g_bo_: ([fst, d]) => post("green bold", fst, d, false),
  g_bo_i_: ([fst, d]) => post("green bold italic", fst, d, false),
  b_i_: ([fst, d]) => post("blue italic", fst, d, false),
  b_bo_: ([fst, d]) => post("blue bold", fst, d, false),
  b_bo_i_: ([fst, d]) => post("blue bold italic", fst, d, false),
}
var grammar = {
    Lexer: undefined,
    ParserRules: [
    {"name": "s$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "s", "symbols": ["s$subexpression$1", "r"], "postprocess": pP.r},
    {"name": "s$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "s", "symbols": ["s$subexpression$2", "g"], "postprocess": pP.g},
    {"name": "s$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "s", "symbols": ["s$subexpression$3", "b"], "postprocess": pP.b},
    {"name": "s$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "s", "symbols": ["s$string$1", "bo_i"], "postprocess": pP.bo_i},
    {"name": "s$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "s", "symbols": ["s$string$2", "bo"], "postprocess": pP.bo},
    {"name": "s", "symbols": [{"literal":"*"}, "i"], "postprocess": pP.i},
    {"name": "s", "symbols": ["char", "s"]},
    {"name": "s", "symbols": []},
    {"name": "r$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r", "symbols": ["r$subexpression$1", "s"], "postprocess": pP.r},
    {"name": "r$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r", "symbols": ["r$subexpression$2", "g"], "postprocess": pP.g},
    {"name": "r$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r", "symbols": ["r$subexpression$3", "b"], "postprocess": pP.b},
    {"name": "r$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "r", "symbols": ["r$string$1", "r_bo_i"], "postprocess": pP.r_bo_i},
    {"name": "r$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "r", "symbols": ["r$string$2", "r_bo"], "postprocess": pP.r_bo},
    {"name": "r", "symbols": [{"literal":"*"}, "r_i"], "postprocess": pP.r_i},
    {"name": "r", "symbols": ["char", "r"], "postprocess": pP.r_},
    {"name": "r", "symbols": []},
    {"name": "g$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g", "symbols": ["g$subexpression$1", "r"], "postprocess": pP.r},
    {"name": "g$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g", "symbols": ["g$subexpression$2", "s"], "postprocess": pP.g},
    {"name": "g$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g", "symbols": ["g$subexpression$3", "b"], "postprocess": pP.b},
    {"name": "g$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "g", "symbols": ["g$string$1", "bo_i"], "postprocess": pP.bo_i},
    {"name": "g$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "g", "symbols": ["g$string$2", "bo"], "postprocess": pP.bo},
    {"name": "g", "symbols": [{"literal":"*"}, "i"], "postprocess": pP.i},
    {"name": "g", "symbols": ["char", "g"], "postprocess": pP.g_},
    {"name": "g", "symbols": []},
    {"name": "b$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b", "symbols": ["b$subexpression$1", "r"], "postprocess": pP.r},
    {"name": "b$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b", "symbols": ["b$subexpression$2", "g"], "postprocess": pP.g},
    {"name": "b$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b", "symbols": ["b$subexpression$3", "s"], "postprocess": pP.b},
    {"name": "b$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "b", "symbols": ["b$string$1", "bo_i"], "postprocess": pP.bo_i},
    {"name": "b$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "b", "symbols": ["b$string$2", "bo"], "postprocess": pP.bo},
    {"name": "b", "symbols": [{"literal":"*"}, "i"], "postprocess": pP.i},
    {"name": "b", "symbols": ["char", "b"], "postprocess": pP.b_},
    {"name": "b", "symbols": []},
    {"name": "i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "i", "symbols": ["i$subexpression$1", "r"], "postprocess": pP.r},
    {"name": "i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "i", "symbols": ["i$subexpression$2", "g"], "postprocess": pP.g},
    {"name": "i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "i", "symbols": ["i$subexpression$3", "b"], "postprocess": pP.b},
    {"name": "i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "i", "symbols": ["i$string$1", "bo"], "postprocess": pP.bo_i},
    {"name": "i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "i", "symbols": ["i$string$2", "bo"], "postprocess": pP.bo},
    {"name": "i", "symbols": [{"literal":"*"}, "s"], "postprocess": pP.i},
    {"name": "i", "symbols": ["char", "i"], "postprocess": pP.i_},
    {"name": "i", "symbols": []},
    {"name": "bo$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "bo", "symbols": ["bo$subexpression$1", "r"], "postprocess": pP.r},
    {"name": "bo$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "bo", "symbols": ["bo$subexpression$2", "g"], "postprocess": pP.g},
    {"name": "bo$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "bo", "symbols": ["bo$subexpression$3", "b"], "postprocess": pP.b},
    {"name": "bo$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "bo", "symbols": ["bo$string$1", "i"], "postprocess": pP.bo_i},
    {"name": "bo$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "bo", "symbols": ["bo$string$2", "s"], "postprocess": pP.bo},
    {"name": "bo", "symbols": [{"literal":"*"}, "i"], "postprocess": pP.i},
    {"name": "bo", "symbols": ["char", "bo"], "postprocess": pP.bo_},
    {"name": "bo", "symbols": []},
    {"name": "bo_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "bo_i", "symbols": ["bo_i$subexpression$1", "r"], "postprocess": pP.r},
    {"name": "bo_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "bo_i", "symbols": ["bo_i$subexpression$2", "g"], "postprocess": pP.g},
    {"name": "bo_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "bo_i", "symbols": ["bo_i$subexpression$3", "b"], "postprocess": pP.b},
    {"name": "bo_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "bo_i", "symbols": ["bo_i$string$1", "s"], "postprocess": pP.bo_i},
    {"name": "bo_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "bo_i", "symbols": ["bo_i$string$2", "i"], "postprocess": pP.bo_i},
    {"name": "bo_i", "symbols": [{"literal":"*"}, "bo"], "postprocess": pP.bo_i},
    {"name": "bo_i", "symbols": ["char", "bo_i"], "postprocess": pP.bo_i_},
    {"name": "bo_i", "symbols": []},
    {"name": "r_bo$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_bo", "symbols": ["r_bo$subexpression$1", "bo"], "postprocess": pP.r_bo},
    {"name": "r_bo$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_bo", "symbols": ["r_bo$subexpression$2", "g_bo"], "postprocess": pP.g_bo},
    {"name": "r_bo$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_bo", "symbols": ["r_bo$subexpression$3", "b_bo"], "postprocess": pP.b_bo},
    {"name": "r_bo$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "r_bo", "symbols": ["r_bo$string$1", "r_i"], "postprocess": pP.r_i},
    {"name": "r_bo$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "r_bo", "symbols": ["r_bo$string$2", "r"], "postprocess": pP.r_bo},
    {"name": "r_bo", "symbols": [{"literal":"*"}, "r_bo_i"], "postprocess": pP.r_bo_i},
    {"name": "r_bo", "symbols": ["char", "r_bo"], "postprocess": pP.r_bo_},
    {"name": "r_bo", "symbols": []},
    {"name": "r_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_i", "symbols": ["r_i$subexpression$1", "i"], "postprocess": pP.r_i},
    {"name": "r_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_i", "symbols": ["r_i$subexpression$2", "g_i"], "postprocess": pP.g_i},
    {"name": "r_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_i", "symbols": ["r_i$subexpression$3", "b_i"], "postprocess": pP.b_i},
    {"name": "r_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "r_i", "symbols": ["r_i$string$1", "r_bo"], "postprocess": pP.r_bo},
    {"name": "r_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "r_i", "symbols": ["r_i$string$2", "r_bo_i"], "postprocess": pP.r_bo_i},
    {"name": "r_i", "symbols": [{"literal":"*"}, "r"], "postprocess": pP.r_i},
    {"name": "r_i", "symbols": ["char", "r_i"], "postprocess": pP.r_i_},
    {"name": "r_i", "symbols": []},
    {"name": "r_bo_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_bo_i", "symbols": ["r_bo_i$subexpression$1", "bo_i"], "postprocess": pP.r_bo_i},
    {"name": "r_bo_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_bo_i", "symbols": ["r_bo_i$subexpression$2", "g_bo_i"], "postprocess": pP.g_bo_i},
    {"name": "r_bo_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_bo_i", "symbols": ["r_bo_i$subexpression$3", "b_bo_i"], "postprocess": pP.b_bo_i},
    {"name": "r_bo_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "r_bo_i", "symbols": ["r_bo_i$string$1", "r"], "postprocess": pP.r_bo_i},
    {"name": "r_bo_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "r_bo_i", "symbols": ["r_bo_i$string$2", "r_i"], "postprocess": pP.r_bo_i},
    {"name": "r_bo_i", "symbols": [{"literal":"*"}, "r_bo"], "postprocess": pP.r_bo_i},
    {"name": "r_bo_i", "symbols": ["char", "r_bo_i"], "postprocess": pP.r_bo_i_},
    {"name": "r_bo_i", "symbols": []},
    {"name": "g_bo$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_bo", "symbols": ["g_bo$subexpression$1", "r_bo"], "postprocess": pP.r_bo},
    {"name": "g_bo$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_bo", "symbols": ["g_bo$subexpression$2", "bo"], "postprocess": pP.g_bo},
    {"name": "g_bo$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_bo", "symbols": ["g_bo$subexpression$3", "b_bo"], "postprocess": pP.b_bo},
    {"name": "g_bo$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "g_bo", "symbols": ["g_bo$string$1", "g_i"], "postprocess": pP.g_i},
    {"name": "g_bo$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "g_bo", "symbols": ["g_bo$string$2", "g"], "postprocess": pP.g_bo},
    {"name": "g_bo", "symbols": [{"literal":"*"}, "g_bo_i"], "postprocess": pP.g_bo_i},
    {"name": "g_bo", "symbols": ["char", "g_bo"], "postprocess": pP.g_bo_},
    {"name": "g_bo", "symbols": []},
    {"name": "g_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_i", "symbols": ["g_i$subexpression$1", "r_i"], "postprocess": pP.r_i},
    {"name": "g_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_i", "symbols": ["g_i$subexpression$2", "i"], "postprocess": pP.g_i},
    {"name": "g_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_i", "symbols": ["g_i$subexpression$3", "b_i"], "postprocess": pP.b_i},
    {"name": "g_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "g_i", "symbols": ["g_i$string$1", "g_bo"], "postprocess": pP.g_bo},
    {"name": "g_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "g_i", "symbols": ["g_i$string$2", "g_bo_i"], "postprocess": pP.g_bo_i},
    {"name": "g_i", "symbols": [{"literal":"*"}, "g"], "postprocess": pP.g_i},
    {"name": "g_i", "symbols": ["char", "g_i"], "postprocess": pP.g_i_},
    {"name": "g_i", "symbols": []},
    {"name": "g_bo_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_bo_i", "symbols": ["g_bo_i$subexpression$1", "r_bo_i"], "postprocess": pP.r_bo_i},
    {"name": "g_bo_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_bo_i", "symbols": ["g_bo_i$subexpression$2", "bo_i"], "postprocess": pP.g_bo_i},
    {"name": "g_bo_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_bo_i", "symbols": ["g_bo_i$subexpression$3", "b_bo_i"], "postprocess": pP.b_bo_i},
    {"name": "g_bo_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "g_bo_i", "symbols": ["g_bo_i$string$1", "g"], "postprocess": pP.g_bo_i},
    {"name": "g_bo_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "g_bo_i", "symbols": ["g_bo_i$string$2", "g_i"], "postprocess": pP.g_bo_i},
    {"name": "g_bo_i", "symbols": [{"literal":"*"}, "g_bo"], "postprocess": pP.g_bo_i},
    {"name": "g_bo_i", "symbols": ["char", "g_bo_i"], "postprocess": pP.g_bo_i_},
    {"name": "g_bo_i", "symbols": []},
    {"name": "b_bo$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_bo", "symbols": ["b_bo$subexpression$1", "r_bo"], "postprocess": pP.r_bo},
    {"name": "b_bo$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_bo", "symbols": ["b_bo$subexpression$2", "g_bo"], "postprocess": pP.g_bo},
    {"name": "b_bo$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_bo", "symbols": ["b_bo$subexpression$3", "bo"], "postprocess": pP.b_bo},
    {"name": "b_bo$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "b_bo", "symbols": ["b_bo$string$1", "b_i"], "postprocess": pP.b_i},
    {"name": "b_bo$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "b_bo", "symbols": ["b_bo$string$2", "b"], "postprocess": pP.b_bo},
    {"name": "b_bo", "symbols": [{"literal":"*"}, "b_bo_i"], "postprocess": pP.b_bo_i},
    {"name": "b_bo", "symbols": ["char", "b_bo"], "postprocess": pP.b_bo_},
    {"name": "b_bo", "symbols": []},
    {"name": "b_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_i", "symbols": ["b_i$subexpression$1", "r_i"], "postprocess": pP.r_i},
    {"name": "b_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_i", "symbols": ["b_i$subexpression$2", "g_i"], "postprocess": pP.g_i},
    {"name": "b_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_i", "symbols": ["b_i$subexpression$3", "i"], "postprocess": pP.b_i},
    {"name": "b_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "b_i", "symbols": ["b_i$string$1", "b_bo"], "postprocess": pP.b_bo},
    {"name": "b_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "b_i", "symbols": ["b_i$string$2", "b_bo_i"], "postprocess": pP.b_bo_i},
    {"name": "b_i", "symbols": [{"literal":"*"}, "b"], "postprocess": pP.b_i},
    {"name": "b_i", "symbols": ["char", "b_i"], "postprocess": pP.b_i_},
    {"name": "b_i", "symbols": []},
    {"name": "b_bo_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_bo_i", "symbols": ["b_bo_i$subexpression$1", "r_bo_i"], "postprocess": pP.r_bo_i},
    {"name": "b_bo_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_bo_i", "symbols": ["b_bo_i$subexpression$2", "g_bo_i"], "postprocess": pP.g_bo_i},
    {"name": "b_bo_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_bo_i", "symbols": ["b_bo_i$subexpression$3", "bo_i"], "postprocess": pP.b_bo_i},
    {"name": "b_bo_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "b_bo_i", "symbols": ["b_bo_i$string$1", "b"], "postprocess": pP.b_bo_i},
    {"name": "b_bo_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "b_bo_i", "symbols": ["b_bo_i$string$2", "b_i"], "postprocess": pP.b_bo_i},
    {"name": "b_bo_i", "symbols": [{"literal":"*"}, "b_bo"], "postprocess": pP.b_bo_i},
    {"name": "b_bo_i", "symbols": ["char", "b_bo_i"], "postprocess": pP.b_bo_i_},
    {"name": "b_bo_i", "symbols": []},
    {"name": "char", "symbols": [{"literal":"r"}], "postprocess": data => data[0]},
    {"name": "char", "symbols": [{"literal":"g"}], "postprocess": data => data[0]},
    {"name": "char", "symbols": [{"literal":"b"}], "postprocess": data => data[0]},
    {"name": "char", "symbols": [{"literal":"<"}], "postprocess": data => data[0]},
    {"name": "char", "symbols": [{"literal":">"}], "postprocess": data => data[0]},
    {"name": "char", "symbols": [{"literal":"*"}], "postprocess": data => data[0]},
    {"name": "char", "symbols": [/[^(<r>|<g>|<b>|\*)]/], "postprocess": data => data[0]}
]
  , ParserStart: "s"
}
if (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {
   module.exports = grammar;
} else {
   window.grammar = grammar;
}
})();
