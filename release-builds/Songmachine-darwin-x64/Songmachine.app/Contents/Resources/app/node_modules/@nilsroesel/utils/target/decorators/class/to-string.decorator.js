"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
function ToString(constructor) {
    var className = constructor.name;
    return /** @class */ (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.toString = toStringFactory(className, _this);
            return _this;
        }
        return class_1;
    }(constructor));
}
exports.ToString = ToString;
function toStringFactory(className, target) {
    return function (formatCallback) {
        var stringBuilder = "[" + className + "] {";
        for (var key in target) {
            if (typeof target[key] !== 'function' && !!target[key]) {
                var keyVal = target[key];
                if (target[key].toString !== undefined) {
                    keyVal = target[key].toString();
                }
                else if (target[key].stringify !== undefined) {
                    keyVal = target[key].stringify();
                }
                stringBuilder += key + " = " + keyVal + " \n";
            }
        }
        stringBuilder += '}';
        if (formatCallback !== undefined)
            stringBuilder = formatCallback(stringBuilder);
        return stringBuilder;
    };
}
exports.toStringFactory = toStringFactory;
