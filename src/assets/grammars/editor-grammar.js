// Generated automatically by nearley, version 2.15.1
// http://github.com/Hardmath123/nearley
(function () {
function id(x) { return x[0]; }

const post = function (css, data, rest, isTerminal = true){
  return [
      {
        css,
        content: data,
        isTerminal
      }
    ].concat(rest);
}

const pP = {
  error: ([fst, d]) => post("error", fst, d),
  invError: ([fst, d]) => post("error", d, fst),

  s: ([fst, d]) => [fst].concat(d),
  r: ([fst, d])  => post("red", fst, d),
  g: ([fst, d]) => post("green", fst, d),
  b: ([fst, d]) => post("blue", fst, d),
  i: ([fst, d]) => post("italic", fst, d),
  bo: ([fst, d]) => post("bold", fst, d),
  bo_i: ([fst, d]) => post("bold italic", fst, d),
  r_i: ([fst, d]) => post("red italic", fst, d),
  r_bo: ([fst, d]) => post("red bold", fst, d),
  r_bo_i: ([fst, d]) => post("red bold italic", fst, d),
  g_i: ([fst, d]) => post("green italic", fst, d),
  g_bo: ([fst, d]) => post("green bold", fst, d),
  g_bo_i: ([fst, d]) => post("green bold italic", fst, d),
  b_i: ([fst, d]) => post("blue italic", fst, d),
  b_bo: ([fst, d]) => post("blue bold", fst, d),
  b_bo_i: ([fst, d]) => post("blue bold italic", fst, d),

  r_: ([fst, d])  => post("red", fst, d, false),
  g_: ([fst, d]) => post("green", fst, d, false),
  b_: ([fst, d]) => post("blue", fst, d, false),
  i_: ([fst, d]) => post("italic", fst, d, false),
  bo_: ([fst, d]) => post("bold", fst, d, false),
  bo_i_: ([fst, d]) => post("bold italic", fst, d, false),
  r_i_: ([fst, d]) => post("red italic", fst, d, false),
  r_bo_: ([fst, d]) => post("red bold", fst, d, false),
  r_bo_i_: ([fst, d]) => post("red bold italic", fst, d, false),
  g_i_: ([fst, d]) => post("green italic", fst, d, false),
  g_bo_: ([fst, d]) => post("green bold", fst, d, false),
  g_bo_i_: ([fst, d]) => post("green bold italic", fst, d, false),
  b_i_: ([fst, d]) => post("blue italic", fst, d, false),
  b_bo_: ([fst, d]) => post("blue bold", fst, d, false),
  b_bo_i_: ([fst, d]) => post("blue bold italic", fst, d, false),
}


  const inBrackets = ([fst, rest]) => [
    {
      css: 'orange',
      content: fst,
      isTerminal: false
    }
  ].concat(rest);

  const brackets = function(data) {
    const openBr = data[0];
    const content = data[1];
    const closingBr = data[2];
    const rest = data[3];
    return [
        {
          css: 'grey',
          content: openBr,
          isTerminal: false
        }
      ]
      .concat(content)
      .concat({
        css: 'grey',
        content: closingBr,
        isTerminal: false
      })
      .concat(rest)
  }
var grammar = {
    Lexer: undefined,
    ParserRules: [
    {"name": "s$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "s", "symbols": ["s$subexpression$1", "r"], "postprocess": pP.r},
    {"name": "s$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "s", "symbols": ["s$subexpression$2", "g"], "postprocess": pP.g},
    {"name": "s$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "s", "symbols": ["s$subexpression$3", "b"], "postprocess": pP.b},
    {"name": "s$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "s", "symbols": ["s$string$1", "bo_i"], "postprocess": pP.bo_i},
    {"name": "s$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "s", "symbols": ["s$string$2", "bo"], "postprocess": pP.bo},
    {"name": "s", "symbols": [{"literal":"*"}, "i"], "postprocess": pP.i},
    {"name": "s", "symbols": ["char", "s"], "postprocess": pP.s},
    {"name": "s", "symbols": ["error", "s"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "s", "symbols": []},
    {"name": "r$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r", "symbols": ["r$subexpression$1", "s"], "postprocess": pP.r},
    {"name": "r$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r", "symbols": ["r$subexpression$2", "g"], "postprocess": pP.g},
    {"name": "r$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r", "symbols": ["r$subexpression$3", "b"], "postprocess": pP.b},
    {"name": "r$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "r", "symbols": ["r$string$1", "r_bo_i"], "postprocess": pP.r_bo_i},
    {"name": "r$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "r", "symbols": ["r$string$2", "r_bo"], "postprocess": pP.r_bo},
    {"name": "r", "symbols": [{"literal":"*"}, "r_i"], "postprocess": pP.r_i},
    {"name": "r", "symbols": ["char", "r"], "postprocess": pP.r_},
    {"name": "r", "symbols": ["error", "r"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "r", "symbols": []},
    {"name": "g$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g", "symbols": ["g$subexpression$1", "r"], "postprocess": pP.r},
    {"name": "g$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g", "symbols": ["g$subexpression$2", "s"], "postprocess": pP.g},
    {"name": "g$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g", "symbols": ["g$subexpression$3", "b"], "postprocess": pP.b},
    {"name": "g$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "g", "symbols": ["g$string$1", "g_bo_i"], "postprocess": pP.g_bo_i},
    {"name": "g$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "g", "symbols": ["g$string$2", "g_bo"], "postprocess": pP.g_bo},
    {"name": "g", "symbols": [{"literal":"*"}, "g_i"], "postprocess": pP.g_i},
    {"name": "g", "symbols": ["char", "g"], "postprocess": pP.g_},
    {"name": "g", "symbols": ["error", "g"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "g", "symbols": []},
    {"name": "b$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b", "symbols": ["b$subexpression$1", "r"], "postprocess": pP.r},
    {"name": "b$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b", "symbols": ["b$subexpression$2", "g"], "postprocess": pP.g},
    {"name": "b$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b", "symbols": ["b$subexpression$3", "s"], "postprocess": pP.b},
    {"name": "b$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "b", "symbols": ["b$string$1", "b_bo_i"], "postprocess": pP.b_bo_i},
    {"name": "b$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "b", "symbols": ["b$string$2", "b_bo"], "postprocess": pP.b_bo},
    {"name": "b", "symbols": [{"literal":"*"}, "b_i"], "postprocess": pP.b_i},
    {"name": "b", "symbols": ["char", "b"], "postprocess": pP.b_},
    {"name": "b", "symbols": ["error", "b"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "b", "symbols": []},
    {"name": "i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "i", "symbols": ["i$subexpression$1", "r"], "postprocess": pP.r},
    {"name": "i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "i", "symbols": ["i$subexpression$2", "g"], "postprocess": pP.g},
    {"name": "i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "i", "symbols": ["i$subexpression$3", "b"], "postprocess": pP.b},
    {"name": "i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "i", "symbols": ["i$string$1", "bo"], "postprocess": pP.bo_i},
    {"name": "i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "i", "symbols": ["i$string$2", "bo_i"], "postprocess": pP.bo_i},
    {"name": "i", "symbols": [{"literal":"*"}, "s"], "postprocess": pP.i},
    {"name": "i", "symbols": ["char", "i"], "postprocess": pP.i_},
    {"name": "i", "symbols": ["error", "i"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "i", "symbols": []},
    {"name": "bo$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "bo", "symbols": ["bo$subexpression$1", "r"], "postprocess": pP.r},
    {"name": "bo$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "bo", "symbols": ["bo$subexpression$2", "g"], "postprocess": pP.g},
    {"name": "bo$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "bo", "symbols": ["bo$subexpression$3", "b"], "postprocess": pP.b},
    {"name": "bo$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "bo", "symbols": ["bo$string$1", "i"], "postprocess": pP.bo_i},
    {"name": "bo$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "bo", "symbols": ["bo$string$2", "s"], "postprocess": pP.bo},
    {"name": "bo", "symbols": [{"literal":"*"}, "i"], "postprocess": pP.i},
    {"name": "bo", "symbols": ["char", "bo"], "postprocess": pP.bo_},
    {"name": "bo", "symbols": ["error", "bo"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "bo", "symbols": []},
    {"name": "bo_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "bo_i", "symbols": ["bo_i$subexpression$1", "r"], "postprocess": pP.r},
    {"name": "bo_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "bo_i", "symbols": ["bo_i$subexpression$2", "g"], "postprocess": pP.g},
    {"name": "bo_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "bo_i", "symbols": ["bo_i$subexpression$3", "b"], "postprocess": pP.b},
    {"name": "bo_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "bo_i", "symbols": ["bo_i$string$1", "s"], "postprocess": pP.bo_i},
    {"name": "bo_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "bo_i", "symbols": ["bo_i$string$2", "i"], "postprocess": pP.bo_i},
    {"name": "bo_i", "symbols": [{"literal":"*"}, "bo"], "postprocess": pP.bo_i},
    {"name": "bo_i", "symbols": ["char", "bo_i"], "postprocess": pP.bo_i_},
    {"name": "bo_i", "symbols": ["error", "bo_i"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "bo_i", "symbols": []},
    {"name": "r_bo$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_bo", "symbols": ["r_bo$subexpression$1", "bo"], "postprocess": pP.r_bo},
    {"name": "r_bo$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_bo", "symbols": ["r_bo$subexpression$2", "g_bo"], "postprocess": pP.g_bo},
    {"name": "r_bo$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_bo", "symbols": ["r_bo$subexpression$3", "b_bo"], "postprocess": pP.b_bo},
    {"name": "r_bo$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "r_bo", "symbols": ["r_bo$string$1", "r_i"], "postprocess": pP.r_i},
    {"name": "r_bo$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "r_bo", "symbols": ["r_bo$string$2", "r"], "postprocess": pP.r_bo},
    {"name": "r_bo", "symbols": [{"literal":"*"}, "r_bo_i"], "postprocess": pP.r_bo_i},
    {"name": "r_bo", "symbols": ["char", "r_bo"], "postprocess": pP.r_bo_},
    {"name": "r_bo", "symbols": ["error", "r_bo"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "r_bo", "symbols": []},
    {"name": "r_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_i", "symbols": ["r_i$subexpression$1", "i"], "postprocess": pP.r_i},
    {"name": "r_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_i", "symbols": ["r_i$subexpression$2", "g_i"], "postprocess": pP.g_i},
    {"name": "r_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_i", "symbols": ["r_i$subexpression$3", "b_i"], "postprocess": pP.b_i},
    {"name": "r_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "r_i", "symbols": ["r_i$string$1", "r_bo"], "postprocess": pP.r_bo},
    {"name": "r_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "r_i", "symbols": ["r_i$string$2", "r_bo_i"], "postprocess": pP.r_bo_i},
    {"name": "r_i", "symbols": [{"literal":"*"}, "r"], "postprocess": pP.r_i},
    {"name": "r_i", "symbols": ["char", "r_i"], "postprocess": pP.r_i_},
    {"name": "r_i", "symbols": ["error", "r_i"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "r_i", "symbols": []},
    {"name": "r_bo_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_bo_i", "symbols": ["r_bo_i$subexpression$1", "bo_i"], "postprocess": pP.r_bo_i},
    {"name": "r_bo_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_bo_i", "symbols": ["r_bo_i$subexpression$2", "g_bo_i"], "postprocess": pP.g_bo_i},
    {"name": "r_bo_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "r_bo_i", "symbols": ["r_bo_i$subexpression$3", "b_bo_i"], "postprocess": pP.b_bo_i},
    {"name": "r_bo_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "r_bo_i", "symbols": ["r_bo_i$string$1", "r"], "postprocess": pP.r_bo_i},
    {"name": "r_bo_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "r_bo_i", "symbols": ["r_bo_i$string$2", "r_i"], "postprocess": pP.r_bo_i},
    {"name": "r_bo_i", "symbols": [{"literal":"*"}, "r_bo"], "postprocess": pP.r_bo_i},
    {"name": "r_bo_i", "symbols": ["char", "r_bo_i"], "postprocess": pP.r_bo_i_},
    {"name": "r_bo_i", "symbols": ["error", "r_bo_i"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "r_bo_i", "symbols": []},
    {"name": "g_bo$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_bo", "symbols": ["g_bo$subexpression$1", "r_bo"], "postprocess": pP.r_bo},
    {"name": "g_bo$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_bo", "symbols": ["g_bo$subexpression$2", "bo"], "postprocess": pP.g_bo},
    {"name": "g_bo$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_bo", "symbols": ["g_bo$subexpression$3", "b_bo"], "postprocess": pP.b_bo},
    {"name": "g_bo$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "g_bo", "symbols": ["g_bo$string$1", "g_i"], "postprocess": pP.g_i},
    {"name": "g_bo$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "g_bo", "symbols": ["g_bo$string$2", "g"], "postprocess": pP.g_bo},
    {"name": "g_bo", "symbols": [{"literal":"*"}, "g_bo_i"], "postprocess": pP.g_bo_i},
    {"name": "g_bo", "symbols": ["char", "g_bo"], "postprocess": pP.g_bo_},
    {"name": "g_bo", "symbols": ["error", "g_bo"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "g_bo", "symbols": []},
    {"name": "g_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_i", "symbols": ["g_i$subexpression$1", "r_i"], "postprocess": pP.r_i},
    {"name": "g_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_i", "symbols": ["g_i$subexpression$2", "i"], "postprocess": pP.g_i},
    {"name": "g_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_i", "symbols": ["g_i$subexpression$3", "b_i"], "postprocess": pP.b_i},
    {"name": "g_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "g_i", "symbols": ["g_i$string$1", "g_bo"], "postprocess": pP.g_bo},
    {"name": "g_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "g_i", "symbols": ["g_i$string$2", "g_bo_i"], "postprocess": pP.g_bo_i},
    {"name": "g_i", "symbols": [{"literal":"*"}, "g"], "postprocess": pP.g_i},
    {"name": "g_i", "symbols": ["char", "g_i"], "postprocess": pP.g_i_},
    {"name": "g_i", "symbols": ["error", "g_i"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "g_i", "symbols": []},
    {"name": "g_bo_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_bo_i", "symbols": ["g_bo_i$subexpression$1", "r_bo_i"], "postprocess": pP.r_bo_i},
    {"name": "g_bo_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_bo_i", "symbols": ["g_bo_i$subexpression$2", "bo_i"], "postprocess": pP.g_bo_i},
    {"name": "g_bo_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "g_bo_i", "symbols": ["g_bo_i$subexpression$3", "b_bo_i"], "postprocess": pP.b_bo_i},
    {"name": "g_bo_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "g_bo_i", "symbols": ["g_bo_i$string$1", "g"], "postprocess": pP.g_bo_i},
    {"name": "g_bo_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "g_bo_i", "symbols": ["g_bo_i$string$2", "g_i"], "postprocess": pP.g_bo_i},
    {"name": "g_bo_i", "symbols": [{"literal":"*"}, "g_bo"], "postprocess": pP.g_bo_i},
    {"name": "g_bo_i", "symbols": ["char", "g_bo_i"], "postprocess": pP.g_bo_i_},
    {"name": "g_bo_i", "symbols": ["error", "g_bo_i"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "g_bo_i", "symbols": []},
    {"name": "b_bo$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_bo", "symbols": ["b_bo$subexpression$1", "r_bo"], "postprocess": pP.r_bo},
    {"name": "b_bo$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_bo", "symbols": ["b_bo$subexpression$2", "g_bo"], "postprocess": pP.g_bo},
    {"name": "b_bo$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_bo", "symbols": ["b_bo$subexpression$3", "bo"], "postprocess": pP.b_bo},
    {"name": "b_bo$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "b_bo", "symbols": ["b_bo$string$1", "b_i"], "postprocess": pP.b_i},
    {"name": "b_bo$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "b_bo", "symbols": ["b_bo$string$2", "b"], "postprocess": pP.b_bo},
    {"name": "b_bo", "symbols": [{"literal":"*"}, "b_bo_i"], "postprocess": pP.b_bo_i},
    {"name": "b_bo", "symbols": ["char", "b_bo"], "postprocess": pP.b_bo_},
    {"name": "b_bo", "symbols": ["error", "b_bo"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "b_bo", "symbols": []},
    {"name": "b_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_i", "symbols": ["b_i$subexpression$1", "r_i"], "postprocess": pP.r_i},
    {"name": "b_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_i", "symbols": ["b_i$subexpression$2", "g_i"], "postprocess": pP.g_i},
    {"name": "b_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_i", "symbols": ["b_i$subexpression$3", "i"], "postprocess": pP.b_i},
    {"name": "b_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "b_i", "symbols": ["b_i$string$1", "b_bo"], "postprocess": pP.b_bo},
    {"name": "b_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "b_i", "symbols": ["b_i$string$2", "b_bo_i"], "postprocess": pP.b_bo_i},
    {"name": "b_i", "symbols": [{"literal":"*"}, "b"], "postprocess": pP.b_i},
    {"name": "b_i", "symbols": ["char", "b_i"], "postprocess": pP.b_i_},
    {"name": "b_i", "symbols": ["error", "b_i"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "b_i", "symbols": []},
    {"name": "b_bo_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_bo_i", "symbols": ["b_bo_i$subexpression$1", "r_bo_i"], "postprocess": pP.r_bo_i},
    {"name": "b_bo_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_bo_i", "symbols": ["b_bo_i$subexpression$2", "g_bo_i"], "postprocess": pP.g_bo_i},
    {"name": "b_bo_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "b_bo_i", "symbols": ["b_bo_i$subexpression$3", "bo_i"], "postprocess": pP.b_bo_i},
    {"name": "b_bo_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "b_bo_i", "symbols": ["b_bo_i$string$1", "b"], "postprocess": pP.b_bo_i},
    {"name": "b_bo_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "b_bo_i", "symbols": ["b_bo_i$string$2", "b_i"], "postprocess": pP.b_bo_i},
    {"name": "b_bo_i", "symbols": [{"literal":"*"}, "b_bo"], "postprocess": pP.b_bo_i},
    {"name": "b_bo_i", "symbols": ["char", "b_bo_i"], "postprocess": pP.b_bo_i_},
    {"name": "b_bo_i", "symbols": ["error", "b_bo_i"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "b_bo_i", "symbols": []},
    {"name": "error", "symbols": [{"literal":"<"}, "notColor"], "postprocess": pP.error},
    {"name": "error$string$1", "symbols": [{"literal":"<"}, {"literal":"r"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "error", "symbols": ["error$string$1", /[^>]/], "postprocess": pP.error},
    {"name": "error$string$2", "symbols": [{"literal":"<"}, {"literal":"g"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "error", "symbols": ["error$string$2", /[^>]/], "postprocess": pP.error},
    {"name": "error$string$3", "symbols": [{"literal":"<"}, {"literal":"b"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "error", "symbols": ["error$string$3", /[^>]/], "postprocess": pP.error},
    {"name": "error$string$4", "symbols": [{"literal":"r"}, {"literal":">"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "error", "symbols": [/[^<]/, "error$string$4"], "postprocess": pP.invError},
    {"name": "error$string$5", "symbols": [{"literal":"g"}, {"literal":">"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "error", "symbols": [/[^<]/, "error$string$5"], "postprocess": pP.invError},
    {"name": "error$string$6", "symbols": [{"literal":"b"}, {"literal":">"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "error", "symbols": [/[^<]/, "error$string$6"], "postprocess": pP.invError},
    {"name": "error", "symbols": ["notColor", {"literal":">"}], "postprocess": pP.invError},
    {"name": "notColor", "symbols": [/[^rgb]/]},
    {"name": "char", "symbols": [/[^\[\]<>\*]/], "postprocess": data => data[0]},
    {"name": "s", "symbols": [{"literal":"["}, "br", {"literal":"]"}, "s"], "postprocess": brackets},
    {"name": "r", "symbols": [{"literal":"["}, "br", {"literal":"]"}, "r"], "postprocess": brackets},
    {"name": "g", "symbols": [{"literal":"["}, "br", {"literal":"]"}, "g"], "postprocess": brackets},
    {"name": "b", "symbols": [{"literal":"["}, "br", {"literal":"]"}, "b"], "postprocess": brackets},
    {"name": "i", "symbols": [{"literal":"["}, "br", {"literal":"]"}, "i"], "postprocess": brackets},
    {"name": "bo", "symbols": [{"literal":"["}, "br", {"literal":"]"}, "bo"], "postprocess": brackets},
    {"name": "bo_i", "symbols": [{"literal":"["}, "br", {"literal":"]"}, "bo_i"], "postprocess": brackets},
    {"name": "r_bo", "symbols": [{"literal":"["}, "br", {"literal":"]"}, "r_bo"], "postprocess": brackets},
    {"name": "r_i", "symbols": [{"literal":"["}, "br", {"literal":"]"}, "r_i"], "postprocess": brackets},
    {"name": "r_bo_i", "symbols": [{"literal":"["}, "br", {"literal":"]"}, "r_bo_i"], "postprocess": brackets},
    {"name": "g_bo", "symbols": [{"literal":"["}, "br", {"literal":"]"}, "g_bo"], "postprocess": brackets},
    {"name": "g_i", "symbols": [{"literal":"["}, "br", {"literal":"]"}, "g_i"], "postprocess": brackets},
    {"name": "g_bo_i", "symbols": [{"literal":"["}, "br", {"literal":"]"}, "g_bo_i"], "postprocess": brackets},
    {"name": "b_bo", "symbols": [{"literal":"["}, "br", {"literal":"]"}, "b_bo"], "postprocess": brackets},
    {"name": "b_i", "symbols": [{"literal":"["}, "br", {"literal":"]"}, "b_i"], "postprocess": brackets},
    {"name": "b_bo_i", "symbols": [{"literal":"["}, "br", {"literal":"]"}, "b_bo_i"], "postprocess": brackets},
    {"name": "br$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br", "symbols": ["br$subexpression$1", "br_r"], "postprocess": pP.r},
    {"name": "br$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br", "symbols": ["br$subexpression$2", "br_g"], "postprocess": pP.g},
    {"name": "br$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br", "symbols": ["br$subexpression$3", "br_b"], "postprocess": pP.b},
    {"name": "br$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br", "symbols": ["br$string$1", "br_bo_i"], "postprocess": pP.bo_i},
    {"name": "br$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br", "symbols": ["br$string$2", "br_bo"], "postprocess": pP.bo},
    {"name": "br", "symbols": [{"literal":"*"}, "br_i"], "postprocess": pP.i},
    {"name": "br", "symbols": ["char", "br"], "postprocess": inBrackets},
    {"name": "br", "symbols": ["error", "br"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "br", "symbols": []},
    {"name": "br_r$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_r", "symbols": ["br_r$subexpression$1", "br"], "postprocess": pP.r},
    {"name": "br_r$subexpression$2", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_r", "symbols": ["br_r$subexpression$2", "br_b"], "postprocess": pP.b},
    {"name": "br_r$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_r", "symbols": ["br_r$string$1", "br_r_bo_i"], "postprocess": pP.r_bo_i},
    {"name": "br_r$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_r", "symbols": ["br_r$string$2", "br_r_bo"], "postprocess": pP.r_bo},
    {"name": "br_r", "symbols": [{"literal":"*"}, "br_r_i"], "postprocess": pP.r_i},
    {"name": "br_r", "symbols": ["char", "br_r"], "postprocess": pP.r_},
    {"name": "br_r", "symbols": ["error", "br_r"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "br_r", "symbols": []},
    {"name": "br_g$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_g", "symbols": ["br_g$subexpression$1", "br_r"], "postprocess": pP.r},
    {"name": "br_g$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_g", "symbols": ["br_g$subexpression$2", "br"], "postprocess": pP.g},
    {"name": "br_g$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_g", "symbols": ["br_g$subexpression$3", "br_b"], "postprocess": pP.b},
    {"name": "br_g$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_g", "symbols": ["br_g$string$1", "br_g_bo_i"], "postprocess": pP.g_bo_i},
    {"name": "br_g$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_g", "symbols": ["br_g$string$2", "br_g_bo"], "postprocess": pP.g_bo},
    {"name": "br_g", "symbols": [{"literal":"*"}, "br_g_i"], "postprocess": pP.g_i},
    {"name": "br_g", "symbols": ["char", "br_g"], "postprocess": pP.g_},
    {"name": "br_g", "symbols": ["error", "br_g"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "br_g", "symbols": []},
    {"name": "br_b$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_b", "symbols": ["br_b$subexpression$1", "br_r"], "postprocess": pP.r},
    {"name": "br_b$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_b", "symbols": ["br_b$subexpression$2", "br_g"], "postprocess": pP.g},
    {"name": "br_b$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_b", "symbols": ["br_b$subexpression$3", "br"], "postprocess": pP.b},
    {"name": "br_b$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_b", "symbols": ["br_b$string$1", "br_b_bo_i"], "postprocess": pP.b_bo_i},
    {"name": "br_b$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_b", "symbols": ["br_b$string$2", "br_b_bo"], "postprocess": pP.b_bo},
    {"name": "br_b", "symbols": [{"literal":"*"}, "br_b_i"], "postprocess": pP.b_i},
    {"name": "br_b", "symbols": ["char", "br_b"], "postprocess": pP.b_},
    {"name": "br_b", "symbols": ["error", "br_b"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "br_b", "symbols": []},
    {"name": "br_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_i", "symbols": ["br_i$subexpression$1", "br_r"], "postprocess": pP.r},
    {"name": "br_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_i", "symbols": ["br_i$subexpression$2", "br_g"], "postprocess": pP.g},
    {"name": "br_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_i", "symbols": ["br_i$subexpression$3", "br_b"], "postprocess": pP.b},
    {"name": "br_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_i", "symbols": ["br_i$string$1", "br_bo"], "postprocess": pP.bo_i},
    {"name": "br_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_i", "symbols": ["br_i$string$2", "br_bo_i"], "postprocess": pP.bo_i},
    {"name": "br_i", "symbols": [{"literal":"*"}, "br"], "postprocess": pP.i},
    {"name": "br_i", "symbols": ["char", "br_i"], "postprocess": pP.i_},
    {"name": "br_i", "symbols": ["error", "br_i"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "br_i", "symbols": []},
    {"name": "br_bo$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_bo", "symbols": ["br_bo$subexpression$1", "br_r"], "postprocess": pP.r},
    {"name": "br_bo$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_bo", "symbols": ["br_bo$subexpression$2", "br_g"], "postprocess": pP.g},
    {"name": "br_bo$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_bo", "symbols": ["br_bo$subexpression$3", "br_b"], "postprocess": pP.b},
    {"name": "br_bo$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_bo", "symbols": ["br_bo$string$1", "br_i"], "postprocess": pP.bo_i},
    {"name": "br_bo$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_bo", "symbols": ["br_bo$string$2", "br"], "postprocess": pP.bo},
    {"name": "br_bo", "symbols": [{"literal":"*"}, "br_i"], "postprocess": pP.i},
    {"name": "br_bo", "symbols": ["char", "br_bo"], "postprocess": pP.bo_},
    {"name": "br_bo", "symbols": ["error", "br_bo"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "br_bo", "symbols": []},
    {"name": "br_bo_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_bo_i", "symbols": ["br_bo_i$subexpression$1", "br_r"], "postprocess": pP.r},
    {"name": "br_bo_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_bo_i", "symbols": ["br_bo_i$subexpression$2", "br_g"], "postprocess": pP.g},
    {"name": "br_bo_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_bo_i", "symbols": ["br_bo_i$subexpression$3", "br_b"], "postprocess": pP.b},
    {"name": "br_bo_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_bo_i", "symbols": ["br_bo_i$string$1", "br"], "postprocess": pP.bo_i},
    {"name": "br_bo_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_bo_i", "symbols": ["br_bo_i$string$2", "br_i"], "postprocess": pP.bo_i},
    {"name": "br_bo_i", "symbols": [{"literal":"*"}, "br_bo"], "postprocess": pP.bo_i},
    {"name": "br_bo_i", "symbols": ["char", "br_bo_i"], "postprocess": pP.bo_i_},
    {"name": "br_bo_i", "symbols": ["error", "br_bo_i"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "br_bo_i", "symbols": []},
    {"name": "br_r_bo$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_r_bo", "symbols": ["br_r_bo$subexpression$1", "br_bo"], "postprocess": pP.r_bo},
    {"name": "br_r_bo$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_r_bo", "symbols": ["br_r_bo$subexpression$2", "br_g_bo"], "postprocess": pP.g_bo},
    {"name": "br_r_bo$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_r_bo", "symbols": ["br_r_bo$subexpression$3", "br_b_bo"], "postprocess": pP.b_bo},
    {"name": "br_r_bo$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_r_bo", "symbols": ["br_r_bo$string$1", "br_r_i"], "postprocess": pP.r_i},
    {"name": "br_r_bo$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_r_bo", "symbols": ["br_r_bo$string$2", "br_r"], "postprocess": pP.r_bo},
    {"name": "br_r_bo", "symbols": [{"literal":"*"}, "br_r_bo_i"], "postprocess": pP.r_bo_i},
    {"name": "br_r_bo", "symbols": ["char", "br_r_bo"], "postprocess": pP.r_bo_},
    {"name": "br_r_bo", "symbols": ["error", "br_r_bo"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "br_r_bo", "symbols": []},
    {"name": "br_r_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_r_i", "symbols": ["br_r_i$subexpression$1", "br_i"], "postprocess": pP.r_i},
    {"name": "br_r_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_r_i", "symbols": ["br_r_i$subexpression$2", "br_g_i"], "postprocess": pP.g_i},
    {"name": "br_r_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_r_i", "symbols": ["br_r_i$subexpression$3", "br_b_i"], "postprocess": pP.b_i},
    {"name": "br_r_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_r_i", "symbols": ["br_r_i$string$1", "br_r_bo"], "postprocess": pP.r_bo},
    {"name": "br_r_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_r_i", "symbols": ["br_r_i$string$2", "br_r_bo_i"], "postprocess": pP.r_bo_i},
    {"name": "br_r_i", "symbols": [{"literal":"*"}, "br_r"], "postprocess": pP.r_i},
    {"name": "br_r_i", "symbols": ["char", "br_r_i"], "postprocess": pP.r_i_},
    {"name": "br_r_i", "symbols": ["error", "br_r_i"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "br_r_i", "symbols": []},
    {"name": "br_r_bo_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_r_bo_i", "symbols": ["br_r_bo_i$subexpression$1", "br_bo_i"], "postprocess": pP.r_bo_i},
    {"name": "br_r_bo_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_r_bo_i", "symbols": ["br_r_bo_i$subexpression$2", "br_g_bo_i"], "postprocess": pP.g_bo_i},
    {"name": "br_r_bo_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_r_bo_i", "symbols": ["br_r_bo_i$subexpression$3", "br_b_bo_i"], "postprocess": pP.b_bo_i},
    {"name": "br_r_bo_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_r_bo_i", "symbols": ["br_r_bo_i$string$1", "br_r"], "postprocess": pP.r_bo_i},
    {"name": "br_r_bo_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_r_bo_i", "symbols": ["br_r_bo_i$string$2", "br_r_i"], "postprocess": pP.r_bo_i},
    {"name": "br_r_bo_i", "symbols": [{"literal":"*"}, "br_r_bo"], "postprocess": pP.r_bo_i},
    {"name": "br_r_bo_i", "symbols": ["char", "br_r_bo_i"], "postprocess": pP.r_bo_i_},
    {"name": "br_r_bo_i", "symbols": ["error", "br_r_bo_i"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "br_r_bo_i", "symbols": []},
    {"name": "br_g_bo$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_g_bo", "symbols": ["br_g_bo$subexpression$1", "br_r_bo"], "postprocess": pP.r_bo},
    {"name": "br_g_bo$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_g_bo", "symbols": ["br_g_bo$subexpression$2", "br_bo"], "postprocess": pP.g_bo},
    {"name": "br_g_bo$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_g_bo", "symbols": ["br_g_bo$subexpression$3", "br_b_bo"], "postprocess": pP.b_bo},
    {"name": "br_g_bo$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_g_bo", "symbols": ["br_g_bo$string$1", "br_g_i"], "postprocess": pP.g_i},
    {"name": "br_g_bo$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_g_bo", "symbols": ["br_g_bo$string$2", "br_g"], "postprocess": pP.g_bo},
    {"name": "br_g_bo", "symbols": [{"literal":"*"}, "br_g_bo_i"], "postprocess": pP.g_bo_i},
    {"name": "br_g_bo", "symbols": ["char", "br_g_bo"], "postprocess": pP.g_bo_},
    {"name": "br_g_bo", "symbols": ["error", "br_g_bo"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "br_g_bo", "symbols": []},
    {"name": "br_g_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_g_i", "symbols": ["br_g_i$subexpression$1", "br_r_i"], "postprocess": pP.r_i},
    {"name": "br_g_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_g_i", "symbols": ["br_g_i$subexpression$2", "br_i"], "postprocess": pP.g_i},
    {"name": "br_g_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_g_i", "symbols": ["br_g_i$subexpression$3", "br_b_i"], "postprocess": pP.b_i},
    {"name": "br_g_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_g_i", "symbols": ["br_g_i$string$1", "br_g_bo"], "postprocess": pP.g_bo},
    {"name": "br_g_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_g_i", "symbols": ["br_g_i$string$2", "br_g_bo_i"], "postprocess": pP.g_bo_i},
    {"name": "br_g_i", "symbols": [{"literal":"*"}, "br_g"], "postprocess": pP.g_i},
    {"name": "br_g_i", "symbols": ["char", "br_g_i"], "postprocess": pP.g_i_},
    {"name": "br_g_i", "symbols": ["error", "br_g_i"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "br_g_i", "symbols": []},
    {"name": "br_g_bo_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_g_bo_i", "symbols": ["br_g_bo_i$subexpression$1", "br_r_bo_i"], "postprocess": pP.r_bo_i},
    {"name": "br_g_bo_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_g_bo_i", "symbols": ["br_g_bo_i$subexpression$2", "br_bo_i"], "postprocess": pP.g_bo_i},
    {"name": "br_g_bo_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_g_bo_i", "symbols": ["br_g_bo_i$subexpression$3", "br_b_bo_i"], "postprocess": pP.b_bo_i},
    {"name": "br_g_bo_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_g_bo_i", "symbols": ["br_g_bo_i$string$1", "br_g"], "postprocess": pP.g_bo_i},
    {"name": "br_g_bo_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_g_bo_i", "symbols": ["br_g_bo_i$string$2", "br_g_i"], "postprocess": pP.g_bo_i},
    {"name": "br_g_bo_i", "symbols": [{"literal":"*"}, "br_g_bo"], "postprocess": pP.g_bo_i},
    {"name": "br_g_bo_i", "symbols": ["char", "br_g_bo_i"], "postprocess": pP.g_bo_i_},
    {"name": "br_g_bo_i", "symbols": ["error", "br_g_bo_i"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "br_g_bo_i", "symbols": []},
    {"name": "br_b_bo$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_b_bo", "symbols": ["br_b_bo$subexpression$1", "br_r_bo"], "postprocess": pP.r_bo},
    {"name": "br_b_bo$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_b_bo", "symbols": ["br_b_bo$subexpression$2", "br_g_bo"], "postprocess": pP.g_bo},
    {"name": "br_b_bo$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_b_bo", "symbols": ["br_b_bo$subexpression$3", "br_bo"], "postprocess": pP.b_bo},
    {"name": "br_b_bo$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_b_bo", "symbols": ["br_b_bo$string$1", "br_b_i"], "postprocess": pP.b_i},
    {"name": "br_b_bo$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_b_bo", "symbols": ["br_b_bo$string$2", "br_b"], "postprocess": pP.b_bo},
    {"name": "br_b_bo", "symbols": [{"literal":"*"}, "br_b_bo_i"], "postprocess": pP.b_bo_i},
    {"name": "br_b_bo", "symbols": ["char", "br_b_bo"], "postprocess": pP.b_bo_},
    {"name": "br_b_bo", "symbols": ["error", "br_b_bo"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "br_b_bo", "symbols": []},
    {"name": "br_b_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_b_i", "symbols": ["br_b_i$subexpression$1", "br_r_i"], "postprocess": pP.r_i},
    {"name": "br_b_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_b_i", "symbols": ["br_b_i$subexpression$2", "br_g_i"], "postprocess": pP.g_i},
    {"name": "br_b_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_b_i", "symbols": ["br_b_i$subexpression$3", "br_i"], "postprocess": pP.b_i},
    {"name": "br_b_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_b_i", "symbols": ["br_b_i$string$1", "br_b_bo"], "postprocess": pP.b_bo},
    {"name": "br_b_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_b_i", "symbols": ["br_b_i$string$2", "br_b_bo_i"], "postprocess": pP.b_bo_i},
    {"name": "br_b_i", "symbols": [{"literal":"*"}, "br_b"], "postprocess": pP.b_i},
    {"name": "br_b_i", "symbols": ["char", "br_b_i"], "postprocess": pP.b_i_},
    {"name": "br_b_i", "symbols": ["error", "br_b_i"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "br_b_i", "symbols": []},
    {"name": "br_b_bo_i$subexpression$1", "symbols": [{"literal":"<"}, /[rR]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_b_bo_i", "symbols": ["br_b_bo_i$subexpression$1", "br_r_bo_i"], "postprocess": pP.r_bo_i},
    {"name": "br_b_bo_i$subexpression$2", "symbols": [{"literal":"<"}, /[gG]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_b_bo_i", "symbols": ["br_b_bo_i$subexpression$2", "br_g_bo_i"], "postprocess": pP.g_bo_i},
    {"name": "br_b_bo_i$subexpression$3", "symbols": [{"literal":"<"}, /[bB]/, {"literal":">"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "br_b_bo_i", "symbols": ["br_b_bo_i$subexpression$3", "br_bo_i"], "postprocess": pP.b_bo_i},
    {"name": "br_b_bo_i$string$1", "symbols": [{"literal":"*"}, {"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_b_bo_i", "symbols": ["br_b_bo_i$string$1", "br_b"], "postprocess": pP.b_bo_i},
    {"name": "br_b_bo_i$string$2", "symbols": [{"literal":"*"}, {"literal":"*"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "br_b_bo_i", "symbols": ["br_b_bo_i$string$2", "br_b_i"], "postprocess": pP.b_bo_i},
    {"name": "br_b_bo_i", "symbols": [{"literal":"*"}, "br_b_bo"], "postprocess": pP.b_bo_i},
    {"name": "br_b_bo_i", "symbols": ["char", "br_b_bo_i"], "postprocess": pP.b_bo_i_},
    {"name": "br_b_bo_i", "symbols": ["error", "br_b_bo_i"], "postprocess": ([err, s]) => err.concat(s)},
    {"name": "br_b_bo_i", "symbols": []}
]
  , ParserStart: "s"
}
if (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {
   module.exports = grammar;
} else {
   window.grammar = grammar;
}
})();
